{"version":3,"sources":["Avatar.js","Monster.js","Tile.js","Row.js","Time.js","Board.js","Tutorial.js","Game.js","levels.js","App.js","serviceWorker.js","index.js"],"names":["Avatar","react_default","a","createElement","className","data-x","this","props","x","data-y","y","Component","Monster","mon","classes","concat","prevDir","dir","data-prevdir","data-id","id","Tile","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tile","React","createRef","state","touched","children","current","childNodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","querySelector","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","target","src_Avatar","key","src_Monster","mtargetx","mtargety","monsters","monster","i","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","rm","push","renderMonster","loc","monsterTarget","touchedA","touchedM","type","avatar","getAvatar","getMonster","data-type","data-loc","ref","Row","mc","src_Tile_0","opacity","row","tiles","rid","parseInt","renderTile","Time","endTime","Date","getTime","time","remaining","Math","ceil","countdown","bind","assertThisInitialized","timer","setInterval","clearInterval","now","endLevel","setState","color","style","Board","targetx","targety","monsterState","tileState","rowData","move","monsterRun","updateMonster","updateTouchCount","document","addEventListener","monsterRunID","removeEventListener","locs","rd","level","grid","length","r","t","count","checkForWin","ugs","updateGameStatus","tileCount","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","currentx","currenty","toString","_this2","querySelectorAll","updated","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getAttribute","targetLoc","calculateTargetLoc","some","random","find","updateBoardStateM","_iterator6","allMons","stillAlive","lives","filter","e","hasMonster","updateBoardState","paint","unpaint","rows","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","src_Row","src_Time","renderRows","Tutorial","show","showTutorial","onClick","gameName","gameVersion","gameHome","Game","name","version","home","gameOver","buttonMessage","seconds","statusCode","statusMessage","tutorial","handleClick","handleKeyPress","handleUserDidSomething","il","increaseLevel","min","restart","sm","bm","sc","arguments","num","flat","reduce","b","floor","getTileState","getMonsterState","levelNum","src_Tutorial_0","href","rel","data-statuscode","src_Board","levels","App","currentLevelIndex","data","elem","cols","getMonsterNum","processLevelData","src_Game","newLevel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.182c5c51.chunk.js","sourcesContent":["import React, { Component } from 'react'; \r\n\r\nclass Avatar extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className = \"avatar\" data-x={this.props.x} data-y={this.props.y}></div>\r\n\t\t)\r\n\t}\t\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { Component } from 'react'; \r\n\r\nclass Monster extends Component {\r\n\trender() {\r\n\t\tconst mon = this.props.mon;\r\n\t\tconst classes = `monster prevDir${mon.prevDir} dir${mon.dir}`;\r\n\t\treturn (\r\n\t\t\t<div className = {classes} data-x={this.props.x} data-y={this.props.y} data-prevdir={mon.dir} data-id={this.props.mon.id}></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Monster;\r\n","import React, { Component } from 'react'; \r\nimport Avatar from './Avatar.js';\r\nimport Monster from './Monster.js';\r\n\r\nclass Tile extends Component {\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.tile = React.createRef();\r\n\t\tthis.state = {\r\n\t\t\ttouched: false\r\n\t\t};\r\n\t}\r\n\t\r\n\thasAvatar(){\r\n\t\tlet children = this.tile.current.childNodes;\r\n\t\tfor (let child of children) {\r\n\t\t\tlet avatar = child.querySelector('.avatar');\r\n\t\t\t\r\n\t\t\tif (avatar) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\thasMonster(){\r\n\t\tlet children = this.tile.current.childNodes;\r\n\t\tfor (let child of children) {\r\n\t\t\tlet monster = child.querySelector('.monster');\r\n\t\t\t\r\n\t\t\tif (monster) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetAvatar(){\r\n\t\tif (this.props.tile.target) {\r\n\t\t\treturn (\r\n\t\t\t\t<Avatar \r\n\t\t\t\t\tx={this.props.tile.x} \r\n\t\t\t\t\ty={this.props.tile.y} \r\n\t\t\t\t\ttile={this}\r\n\t\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\t\r\n\trenderMonster(key, mon){\r\n\t\treturn (\r\n\t\t\t<Monster key={key} mon={mon} x={mon.mtargetx} y={mon.mtargety} prevDir={mon.prevDir}/>\r\n\t\t);\r\n\t}\r\n\t\r\n\tgetMonster(){\r\n\t\tlet monsters = [];\r\n\t\tif (this.props.monster) {\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\tfor (let mon of this.props.rm){\r\n\t\t\t\tmonsters.push(this.renderMonster(i, mon));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn monsters;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst tile = this.props.tile;\r\n\t\t\r\n\t\tconst loc = tile.x + '-' + tile.y;\r\n\t\tconst target = this.props.target ? 'target' : '';\r\n\t\tconst monsterTarget = this.props.monsterTarget ? 'targetM' : '';\r\n\t\tconst touchedA = tile.touchedA ? 'touchedA' : '';\r\n\t\tconst touchedM = tile.touchedM ? 'touchedM' : '';\r\n\t\tconst type = tile.type;\r\n\t\tconst avatar = this.getAvatar();\r\n\t\tconst monster = this.getMonster();\r\n\t\t\r\n\t\tconst classes = `loc ${type} \r\n\t\t\t\t\t\t\t${target}\r\n\t\t\t\t\t\t\t${monsterTarget}\r\n\t\t\t\t\t\t\t${touchedA} \r\n\t\t\t\t\t\t\t${touchedM} \r\n\t\t\t\t\t\t\t${avatar ? 'avatarT' : ''}\r\n\t\t\t\t\t\t\t${monster ? 'monsterT' : ''}`;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={classes} data-type={type} data-loc={loc} data-x={tile.x} data-y={tile.y} ref={this.tile}>\r\n\t\t\t\t{avatar}\r\n\t\t\t\t{monster}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Tile;\r\n","import React, { Component } from 'react'; \r\nimport Tile from './Tile.js';\r\n\r\nclass Row extends Component {\r\n\t// renderTile(key, tile, target, monsterTarget, mtx, mty, mc) {\r\n\trenderTile(key, tile, target, monsterTarget, rm, mc) {\r\n\t\treturn(\r\n\t\t\t<Tile \r\n\t\t\t\tkey={key} \r\n\t\t\t\ttile={tile}\r\n\t\t\t\ttarget={target}\r\n\t\t\t\tmonster={monsterTarget} \r\n\t\t\t\trm={rm}\r\n\t\t\t\t// mtx={mtx}\r\n// \t\t\t\tmty={mty}\r\n\t\t\t\tmc={mc} \r\n\t\t\t\topacity={this.props.opacity}\r\n\t\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet id = 0;\r\n\t\tlet row = [];\r\n\t\tfor (let tile of this.props.tiles) {\r\n\t\t\tlet y = this.props.rid;\r\n\t\t\tif (typeof y !== 'number') {\r\n\t\t\t\ty = parseInt(y);\r\n\t\t\t}\r\n\t\t\tlet x = id;\r\n\t\t\tlet key = x + \"-\" + y;\r\n\t\t\tlet monsters = this.props.monsters;\r\n\t\t\tlet monsterTarget = false;\r\n\t\t\tlet mc = 0;\r\n\t\t\tlet rm = [];\r\n\t\t\t\r\n\t\t\tfor (let monster of monsters) {\r\n\t\t\t\tif (typeof monster.mtargetx !== 'number') {\r\n\t\t\t\t\tmonster.mtargetx = parseInt(monster.mtargetx);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof monster.mtargety !== 'number') {\r\n\t\t\t\t\tmonster.mtargety = parseInt(monster.mtargety);\r\n\t\t\t\t}\r\n\t\t\t\tif (y === monster.mtargety && x === monster.mtargetx) {\r\n\t\t\t\t\tmonsterTarget = true;\r\n\t\t\t\t\tmc++;\r\n\t\t\t\t\trm.push(monster)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// let locClass = tile.type;\r\n\t\t\trow.push(this.renderTile(key, tile, tile.target, monsterTarget, rm, mc));\r\n\t\t\tid++;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className = \"row\">\r\n\t\t\t\t{row}\r\n\t\t\t\t<div className = \"clear\"></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react'; \r\n\r\nclass Time extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tendTime: new Date().getTime() + parseInt(this.props.time),\r\n\t\t\tremaining: Math.ceil(parseInt(this.props.time)/1000)\r\n\t\t};\r\n\t\t\r\n\t\tthis.countdown = this.countdown.bind(this)\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\t\r\n\t\tthis.timer = setInterval(this.countdown, 1000)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(this.timer);\r\n\t}\r\n\t\r\n\tcountdown() {\r\n\t\tconst now = new Date().getTime();\r\n\t\tconst remaining = Math.ceil( (parseInt(this.state.endTime) - now)/1000 );\r\n\t\tlet endLevel = this.props.endLevel;\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tremaining: remaining\r\n\t\t});\r\n\t\t\r\n\t\tif (remaining < 0) {\r\n\t\t\tendLevel();\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst classes = 'countdown-timer flasher';\r\n\t\tlet color = '#4d807f';\r\n\t\t\r\n\t\tif (this.state.remaining <= 3) {\r\n\t\t\tcolor = 'red'\r\n\t\t}\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className=\"time\">\r\n\t\t\t\t<span className={classes} style={{color: color}}>\r\n\t\t\t\t\t{this.state.remaining}\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tseconds\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Time;","import React, { Component } from 'react'; \r\nimport Row from './Row.js';\r\nimport Time from './Time.js';\r\n\r\nclass Board extends Component {\r\n\t/**\r\n\t * @param props\r\n\t */\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttargetx: 0,\r\n\t\t\ttargety: 0,\r\n\t\t\ttouched: 1,\r\n\t\t\tmonsterState: this.props.monsters,\r\n\t\t\ttileState: this.props.tiles,\r\n\t\t\tmonsters: this.props.monsters,\r\n\t\t\ttiles: this.props.rowData\r\n\t\t};\r\n\t\t\r\n\t\tthis.monsters = this.props.monsters;\r\n\t\tthis.move = this.move.bind(this);\r\n\t\tthis.monsterRun = this.monsterRun.bind(this);\r\n\t\tthis.updateMonster = this.updateMonster.bind(this);\r\n\t\tthis.updateTouchCount = this.updateTouchCount.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keydown\", this.move, false);\r\n\t\tthis.monsterRunID = setInterval(this.monsterRun, 1000);\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.move, false);\r\n\t\tclearInterval(this.monsterRunID);\r\n\t}\r\n\r\n\t/**\r\n\t * @param locs\r\n\t * @returns {Array}\r\n\t */\r\n\tgetTileState(locs) {\r\n\t\tconst rd = this.props.level.grid;\r\n\t\tlet tiles = [];\r\n\r\n\t\tfor (let y = 0; y < rd.length; y++) {\r\n\t\t\tlet row = rd[y];\r\n\t\t\tlet r = [];\r\n\r\n\t\t\tfor (let x = 0; x < row.length; x++) {\r\n\t\t\t\tlet type = row[x] ? 'tile' : 'space';\r\n\t\t\t\tlet target = false;\r\n\t\t\t\tlet touchedA = false;\r\n\t\t\t\tlet touchedM = false;\r\n\t\t\t\t\r\n\t\t\t\tfor (let loc of locs) {\r\n\t\t\t\t\tif (loc.x === x && loc.y === y) {\r\n\t\t\t\t\t\tif (loc.t === 'a') {\r\n\t\t\t\t\t\t\ttouchedA = true;\r\n\t\t\t\t\t\t\ttarget = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttouchedM = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tr.push({\tx: x,\r\n\t\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\ttouchedA: touchedA,\r\n\t\t\t\t\t\t\ttouchedM: touchedM\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\ttiles.push(r)\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param count\r\n\t */\r\n\tupdateTouchCount(count) {\r\n\t\tthis.setState({\r\n\t\t\ttouched: parseInt(this.state.touched) + count\r\n\t\t});\r\n\t\r\n\t\tthis.checkForWin();\r\n\t}\r\n\t\r\n\tcheckForWin() {\r\n\t\tlet ugs = this.props.updateGameStatus;\r\n\t\tif (this.state.touched === this.props.tileCount) {\r\n\t\t\tugs(true, \"Level Won\", \"Next Level\", 'next-level')\r\n\t\t} \r\n\t}\r\n\r\n\t/**\r\n\t * @param targetx\r\n\t * @param targety\r\n\t * @param monster\r\n\t * @returns {*}\r\n\t */\r\n\tpaint(targetx, targety, monster) {\r\n\t\tconst tiles = this.state.tiles;\r\n\r\n\t\tfor (let row of tiles) {\r\n\t\t\tfor (let tile of row) {\r\n\t\t\t\tif (tile.x == targetx && tile.y == targety) {\r\n\t\t\t\t\ttile.target = true;\r\n\r\n\t\t\t\t\tif (!tile.touchedA) {\r\n\t\t\t\t\t\t//if (!monster) {\r\n\t\t\t\t\t\t\ttile.touchedA = true;\r\n\t\t\t\t\t\t\ttile.touchedM = false;\r\n\t\t\t\t\t\t\tthis.updateTouchCount(1);\r\n\t\t\t\t\t\t\t// let utc = this.props.updateTouchCount;\r\n// \t\t\t\t\t\t\tutc();\t\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttile.target = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\r\n\t/**\r\n\t * @param targetx\r\n\t * @param targety\r\n\t * @returns {*}\r\n\t */\r\n\tunpaint(targetx, targety) {\r\n\t\tconst tiles = this.state.tiles;\r\n\t\t\r\n\t\tfor (let row of tiles) {\r\n\t\t\tfor (let tile of row) {\r\n\t\t\t\tif (tile.x === targetx && tile.y === targety) {\r\n\t\t\t\t\ttile.touchedM = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (tile.touchedA) {\r\n\t\t\t\t\t\ttile.touchedA = false;\r\n\t\t\t\t\t\tthis.updateTouchCount(-1);\r\n\t\t\t\t\t\t// let ltc = this.props.lowerTouchCount;\r\n// \t\t\t\t\t\tltc();\r\n\t\t\t\t\t} \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the next target location based on user input\r\n\t *\r\n\t * @param dir\r\n\t * @param currentx\r\n\t * @param currenty\r\n\t * @returns {{targety: number, targetx: number}}\r\n\t */\r\n\tcalculateTargetLoc(dir, currentx, currenty) {\r\n\t\tlet targetx;\r\n\t\tlet targety;\r\n\t\tif (typeof dir !== 'string') {\r\n\t\t\tdir = dir.toString(); // always use string comparisons\r\n\t\t}\r\n\t\tif (dir === '1' || dir === \"ArrowRight\" || dir === 'd' || dir === 'D') {\r\n\t\t\t// moving right\r\n\t\t\ttargetx = parseInt(currentx) + 1;\r\n\t\t\ttargety = parseInt(currenty);\r\n\t\t} else if (dir === '2' || dir === \"ArrowDown\" || dir === 's' || dir === 'S') {\r\n\t\t\t// moving down\r\n\t\t\ttargetx = parseInt(currentx);\r\n\t\t\ttargety = parseInt(currenty) + 1;\r\n\t\t} else if (dir === '3' || dir === \"ArrowLeft\" || dir === 'a' || dir === 'A') {\r\n\t\t\t// moving left\r\n\t\t\ttargetx = parseInt(currentx) - 1;\r\n\t\t\ttargety = parseInt(currenty);\r\n\t\t} else if (dir === '4' || dir === \"ArrowUp\" || dir === 'w' || dir === 'W') {\r\n\t\t\t// moving up\r\n\t\t\ttargetx = parseInt(currentx);\r\n\t\t\ttargety = parseInt(currenty) - 1;\r\n\t\t} else if (dir === 'n' ||dir === 'N') {\r\n\t\t\t// Goto next level\r\n\t\t\tlet ugs = this.props.updateGameStatus;\r\n\t\t\tugs(\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"Super Power Activated: Skip to Next Level!\",\r\n\t\t\t\t\"Next Level\",\r\n\t\t\t\t'next-level'\r\n\t\t\t);\r\n\t\t}\r\n\t\t\t  \r\n\t\treturn({targetx: targetx, targety: targety})\r\n\t}\r\n\t\r\n\tmonsterRun() {\r\n\t\tlet monsters = document.querySelectorAll('.monster');\r\n\t\tlet updated = [];\r\n\t\t\r\n\t\tfor (let monster of monsters) {\r\n\r\n\t\t\tlet dir = parseInt(monster.getAttribute('data-prevdir'));\r\n\t\t\tlet prevDir = dir;\r\n\t\t\tlet id = monster.getAttribute('data-id');\r\n\t\t\tlet currentx = monster.getAttribute('data-x');\r\n\t\t\tlet currenty = monster.getAttribute('data-y');\r\n\r\n\t\t\tlet targetLoc = this.calculateTargetLoc(dir, currentx, currenty);\r\n\t\t\tlet target = document.querySelector(`.tile[data-loc=\"${targetLoc.targetx}-${targetLoc.targety}\"]`);\r\n\t\t\tlet targetx = targetLoc.targetx;\r\n\t\t\tlet targety = targetLoc.targety;\r\n\t\t\t\r\n\t\t\tif (target != null) { // if target exists\r\n\t\t\t\tif (updated.some(mon => mon.mtargetx === targetx && mon.mtargety === targety)) { // if no other monster is aleady heading to this target\r\n\t\t\t\t\tdir = Math.ceil(Math.random() * 4); // proposed tile isn't valid, pick a random new direction\r\n\t\t\t\t\ttargetx = currentx;\r\n\t\t\t\t\ttargety = currenty;\r\n\t\t\t\t} \r\n\t\t\t} else {\r\n\t\t\t\tdir = Math.ceil(Math.random() * 4); // proposed tile isn't valid, pick a random new direction\r\n\t\t\t\ttargetx = currentx;\r\n\t\t\t\ttargety = currenty;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet rm = this.monsters.find(mon => mon.id == id);\r\n\t\t\trm.mtargetx = targetx;\r\n\t\t\trm.mtargety = targety;\r\n\t\t\trm.prevDir = prevDir;\r\n\t\t\trm.dir = dir;\r\n\r\n\t\t\tupdated.push(rm);\r\n\t\t\tthis.updateBoardStateM(targetx, targety);\r\n\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmonsters: updated\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param id\r\n\t * @returns {boolean}\r\n\t */\r\n\tupdateMonster(id) {\r\n\t\tconst allMons = this.monsters;\r\n\t\tlet stillAlive = true;\r\n\r\n\t\tconst monster = allMons.find(mon => mon.id == id);\r\n\t\tmonster.lives = monster.lives - 1;\r\n\t\t\r\n\t\tif (monster.lives === 0) {\r\n\t\t\tstillAlive = false;\r\n\t\t} \r\n\r\n\t\tthis.monsters = allMons.filter(mon => mon.lives > 0);\r\n\t\treturn stillAlive;\r\n\t}\r\n\r\n\t/**\r\n\t * @param e\r\n\t */\r\n\tmove(e) {\r\n\t\tlet monster = false;\r\n\t\tlet avatar = document.querySelector('.avatar');\r\n\t\tlet currentx = avatar.getAttribute('data-x');\r\n\t\tlet currenty = avatar.getAttribute('data-y');\r\n\r\n\t\tlet targetLoc = this.calculateTargetLoc(e.key, currentx, currenty);\r\n\t\tlet target = document.querySelector(`.tile[data-loc=\"${targetLoc.targetx}-${targetLoc.targety}\"]`);\r\n\r\n\t\tif (target != null) {\r\n\t\t\tlet hasMonster = target.querySelector('.monster');\r\n\t\t\tif (hasMonster != null) { // you smooshed the monster!\r\n\t\t\t\tlet id = hasMonster.getAttribute('data-id');\r\n\t\t\t\tmonster = this.updateMonster(id)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.updateBoardState(targetLoc.targetx, targetLoc.targety, monster);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param targetx\r\n\t * @param targety\r\n\t * @param monster\r\n\t */\r\n\tupdateBoardState(targetx, targety, monster) {\r\n\t\t// avatar moved, updating board\r\n\t\tconst x = parseInt(targetx);\r\n\t\tconst y = parseInt(targety);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\ttargetx: x,\r\n\t\t\ttargety: y,\r\n\t\t\ttiles: this.paint(x, y, monster)\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param targetx\r\n\t * @param targety\r\n\t */\r\n\tupdateBoardStateM(targetx, targety) {\r\n\t\t// monster moved, updating board\r\n\t\tconst x = parseInt(targetx);\r\n\t\tconst y = parseInt(targety);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\ttiles: this.unpaint(x, y)\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Array}\r\n\t */\r\n\trenderRows() {\r\n\t\tlet rows = [];\r\n\t\tlet id = 0;\r\n\t\tfor (let row of this.state.tiles) {\r\n\t\t\trows.push(<Row \t\r\n\t\t\t\t\t\tkey={id} \r\n\t\t\t\t\t\trid={id} \r\n\t\t\t\t\t\ttargetx={this.state.targetx} \r\n\t\t\t\t\t\ttargety={this.state.targety} \r\n\t\t\t\t\t\tmonsters={this.monsters} \r\n\t\t\t\t\t\ttiles={row}\r\n\t\t\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tid++;\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {*}\r\n\t */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<div className = \"details-tab\">\r\n\t\t\t\t<div className=\"lives\">{this.props.lives}<br></br><span>lives</span></div>\r\n\t\t\t\t<div className=\"status\">{this.state.touched}/{this.props.tileCount}<br></br><span>tiles</span></div>\r\n\t\t\t<Time time={this.props.time} endLevel={this.props.endLevel}/>\r\n\t\t\t</div>\r\n\t\t\t<div className = \"board\">\r\n\t\t\t\t{ this.renderRows() }\r\n\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react'; \r\n\r\nclass Tutorial extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshow: false\r\n\t\t};\r\n\t\t\r\n\t\tthis.showTutorial = this.showTutorial.bind(this);\r\n\t}\r\n\t\r\n\tshowTutorial() {\r\n\t\tthis.setState({\r\n\t\t\tshow: !this.state.show\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"tcontainer\">\r\n\t\t\t\t<div className=\"tbutton\" onClick={this.showTutorial}>See tutorial</div>\r\n\t\t\t\t{ !this.state.show \r\n\t\t\t\t  ?\t''\r\n\t\t\t\t  : <div className=\"tutorial\">\r\n\t\t\t\t\t\t<h3>Objective</h3>\r\n\t\t\t\t\t\t<p>Turn all the tiles blue before the timer runs out.</p>\r\n\t\t\t\t\t\t<h3>Movement</h3>\r\n\t\t\t\t\t\t<p>You're the blue dot, on the blue tile in the top left corner. Move with your arrow keys - every tile you touch will turn blue.</p>\r\n\t\t\t\t\t\t<h3>Watch Out</h3>\r\n\t\t\t\t\t\t<p>Opposing forces are turning tiles gold. Undo their work by moving over them. If you touch your rivals three times, they disappear.</p>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Tutorial;","import React, { Component } from 'react';\r\nimport Board from './Board.js';\r\nimport Tutorial from './Tutorial.js';\r\n\r\nconst gameName    = 'Paint Run';\r\nconst gameVersion = '1.0.4';\r\nconst gameHome    = 'https://github.com/ahl389/paint-run2';\r\n\r\nclass Game extends Component {\r\n\t/**\r\n\t * @param props\r\n\t */\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: gameName,\r\n\t\t\tversion: gameVersion,\r\n\t\t\thome: gameHome,\r\n\t\t\tlives: 3,\r\n\t\t\tgameOver: true,\r\n\t\t\tbuttonMessage: \"Begin Game!\",\r\n\t\t\tseconds: this.props.level.time,\r\n\t\t\tstatusCode: 'new-game',\r\n\t\t\tstatusMessage: 'Paint Run',\r\n\t\t\ttutorial: false\r\n\t\t};\r\n\t\t\r\n\t\t//this.monsters = this.getInitialMonsterState(this.props.tiles)\r\n\t\tthis.endLevel = this.endLevel.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param e\r\n\t */\r\n\thandleClick(e) {\r\n\t\tconst statusCode = e.target.getAttribute('data-statuscode');\r\n\t\tthis.handleUserDidSomething(statusCode);\r\n\t}\r\n\r\n\t/**\r\n\t * @param e\r\n\t */\r\n\thandleKeyPress(e) {\r\n\t\tconst statusCode = this.state.statusCode;\r\n\t\tswitch (e.key) {\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t\tcase ' ':      // Spacebar\r\n\t\t\tcase 'Enter':  // Enter/Return key\r\n\t\t\tcase 'n':\r\n\t\t\tcase 'N':\r\n\t\t\t\tthis.handleUserDidSomething(statusCode);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param statusCode\r\n\t */\r\n\thandleUserDidSomething(statusCode) {\r\n\t\tif (statusCode === 'new-game') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgameOver: false\r\n\t\t\t});\r\n\t\t} else if (statusCode === 'same-level') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgameOver: false,\r\n\t\t\t\ttouched: 1\r\n\t\t\t});\r\n\t\t} else if (statusCode === 'next-level') {\r\n\t\t\tlet il = this.props.increaseLevel;\r\n\t\t\til();\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tlives: Math.min(this.state.lives + 2, 4),\r\n\t\t\t\tgameOver: false,\r\n\t\t\t\ttouched: 1\r\n\t\t\t});\r\n\t\t} else if (statusCode === 'restart') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tlives: 3,\r\n\t\t\t\tgameOver: false,\r\n\t\t\t\ttouched: 1\r\n\t\t\t});\r\n\r\n\t\t\tlet restart = this.props.restart;\r\n\t\t\trestart();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param gameOver\r\n\t * @param sm\r\n\t * @param bm\r\n\t * @param sc\r\n\t * @param lives\r\n\t */\r\n\tupdateGameStatus(gameOver, sm, bm, sc, lives = this.state.lives) {\r\n\t\tthis.setState({\r\n\t\t\tgameOver: gameOver,\r\n\t\t\tstatusMessage: sm,\r\n\t\t\tbuttonMessage: bm,\r\n\t\t\tlives: lives,\r\n\t\t\tstatusCode: sc\r\n\t\t});\r\n\t}\r\n\r\n\tendLevel() {\r\n\t\tconst lives = this.state.lives - 1;\r\n\t\tconst gameOver = true;\r\n\r\n\t\tlet sm = '';\r\n\t\tlet bm ='';\r\n\t\tlet sc = '';\r\n\t\tif (lives > 0) {\r\n\t\t\tsm = `Out of time, you have ${lives} lives remaining!`;\r\n\t\t\tbm = 'Try again.';\r\n\t\t\tsc = 'same-level';\r\n\t\t} else {\r\n\t\t\tsm = `Game Over`;\r\n\t\t\tbm = 'Play again';\r\n\t\t\tsc = 'restart';\r\n\t\t}\r\n\t\t\r\n\t\tthis.updateGameStatus(gameOver, sm, bm, sc, lives)\r\n\t}\r\n\r\n\t/**\r\n\t * @param locs\r\n\t * @returns {Array}\r\n\t */\r\n\tgetTileState(locs) {\r\n\t\tconst rd = this.props.level.grid;\r\n\t\tlet tiles = [];\r\n\r\n\t\tfor (let y = 0; y < rd.length; y++) {\r\n\t\t\tlet row = rd[y];\r\n\t\t\tlet r = [];\r\n\r\n\t\t\tfor (let x = 0; x < row.length; x++) {\r\n\t\t\t\tlet type = row[x] ? 'tile' : 'space';\r\n\t\t\t\tlet target = false;\r\n\t\t\t\tlet touchedA = false;\r\n\t\t\t\tlet touchedM = false;\r\n\t\t\t\t\r\n\t\t\t\tfor (let loc of locs) {\r\n\t\t\t\t\tif (loc.x === x && loc.y === y) {\r\n\t\t\t\t\t\tif (loc.t === 'a') {\r\n\t\t\t\t\t\t\ttouchedA = true;\r\n\t\t\t\t\t\t\ttarget = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttouchedM = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tr.push({\tx: x,\r\n\t\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\ttouchedA: touchedA,\r\n\t\t\t\t\t\t\ttouchedM: touchedM\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\ttiles.push(r)\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\r\n\t/**\r\n\t * @param tiles\r\n\t * @returns {Array}\r\n\t */\r\n\tgetMonsterState(tiles) {\r\n\t\tlet monsters = [];\r\n\t\tconst num = this.props.level.monsters;\r\n\t\tlet flat = tiles.reduce(function(a,b) { return a.concat(b);  });\r\n\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tconst target = flat[\r\n\t\t\t\tMath.floor(Math.random() * this.props.level.tiles/2)\r\n\t\t\t\t+ Math.floor(this.props.level.tiles/2)\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\tmonsters.push({\r\n\t\t\t\tmtargetx: target.x,\r\n\t\t\t\tmtargety: target.y,\r\n\t\t\t\tdir: 4,\r\n\t\t\t\tprevDir: 4,\r\n\t\t\t\tlives: 3,\r\n\t\t\t\tid: i\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn monsters;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {*}\r\n\t */\r\n\trender() {\r\n\t\tlet locs = [{t:'a', x:0, y:0}];\r\n\t\tconst tileState = this.getTileState(locs);\r\n\t\tconst monsterState = this.getMonsterState(tileState);\r\n\r\n\t\tconst gameOver = this.state.gameOver;\r\n\t\tif (gameOver) {\r\n\t\t\t// turn on keyPress event listener\r\n\t\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress);\r\n\t\t} else {\r\n\t\t\tdocument.removeEventListener(\"keydown\", this.handleKeyPress);\r\n\t\t}\r\n\r\n\t\tconst level = this.props.level;\r\n\t\tconst ugs = this.updateGameStatus;\r\n\t\tconst endLevel = this.endLevel;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game-board\">\r\n\t\t\t\t<div className = \"header-content\">\r\n\t\t\t\t\t<div className=\"level\">\r\n\t\t\t\t\t\t<h1>Level {level.levelNum}</h1>\r\n\t\t\t\t\t\t<Tutorial/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className = \"about\">\r\n\t\t\t\t\t\t<a href={this.state.home} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.name} v{this.state.version}</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"clear\"></div>\r\n\r\n\t\t\t\t{ ! gameOver \r\n\t\t\t\t  ? <Board\r\n\t\t\t\t\t\tmonsters={monsterState}\r\n\t\t\t\t\t\trowData={tileState}\r\n\t\t\t\t\t\tlives={this.state.lives}\r\n\t\t\t\t\t\ttileCount={level.tiles}\r\n\t\t\t\t\t\tlevel={this.props.level}\r\n\t\t\t\t\t\ttime={this.props.level.time}\r\n\t\t\t\t\t\tendLevel={endLevel.bind(this)}\r\n\t\t\t\t\t\tupdateGameStatus={ugs.bind(this)}\r\n\t\t\t\t\t\t/> \r\n\t\t  \t\t  : <div className = \"gameover\">\r\n\t\t\t\t\t\t<h1>{this.state.statusMessage}</h1>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\t\tdata-statuscode={this.state.statusCode}>\r\n\t\t\t\t        \t{this.state.buttonMessage}\r\n\t\t\t\t     \t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default Game;\r\n","// Paint Run - Level Maps\r\n// 1 = tile\r\n// 0 = empty\r\n\r\nvar levels = [{\r\n\t// 4x4\r\n\ttiles: [\r\n\t\t[1,1,1,0],\r\n\t\t[1,0,1,1],\r\n\t\t[1,0,1,0],\r\n\t\t[1,1,1,1],\r\n\t]\r\n},{\r\n\t// 5x5\r\n\ttiles: [\r\n\t\t[1,1,1,1,0],\r\n\t\t[1,0,0,1,1],\r\n\t\t[1,0,1,1,1],\r\n\t\t[1,0,1,0,0],\r\n\t\t[1,1,1,1,0],\r\n\t]\r\n},{\r\n\t// 6x6\r\n\ttiles: [\r\n\t\t[1,1,1,1,0,1],\r\n\t\t[0,0,0,1,1,1],\r\n\t\t[0,0,1,1,1,1],\r\n\t\t[1,0,1,1,0,1],\r\n\t\t[1,1,1,1,0,1],\r\n\t\t[0,1,0,1,1,1],\r\n\t]\r\n},{\r\n\t// 6x7\r\n\ttiles: [\r\n\t\t[1,1,1,1,1,1],\r\n\t\t[0,0,0,1,1,1],\r\n\t\t[0,0,1,1,0,1],\r\n\t\t[1,0,0,1,0,1],\r\n\t\t[1,1,1,1,0,1],\r\n\t\t[0,1,1,1,1,1],\r\n\t\t[1,1,1,0,1,1],\r\n\t]\r\n},{\r\n\t// 7x9\r\n\ttiles: [\r\n\t\t[1,0,1,1,0,1,0],\r\n\t\t[1,0,0,1,1,1,1],\r\n\t\t[1,0,1,1,0,1,1],\r\n\t\t[1,0,1,1,0,1,0],\r\n\t\t[1,1,1,0,0,1,0],\r\n\t\t[0,1,1,0,1,1,1],\r\n\t\t[0,1,0,1,1,1,0],\r\n\t\t[0,1,0,1,0,1,0],\r\n\t\t[0,1,1,1,1,1,1],\r\n\t]\r\n},{\r\n\t// 8x8\r\n\ttiles: [\r\n\t\t[1,0,1,1,1,0,1,0],\r\n\t\t[1,0,0,0,1,1,1,1],\r\n\t\t[1,0,1,1,1,0,1,1],\r\n\t\t[1,0,1,1,1,1,0,1],\r\n\t\t[1,1,1,0,0,0,1,1],\r\n\t\t[0,1,1,0,0,0,1,1],\r\n\t\t[0,1,1,1,0,0,0,0],\r\n\t\t[0,1,0,1,1,1,1,1],\r\n\t]\r\n},{\r\n\t// 10x4\r\n\ttiles: [\r\n\t\t[1,1,1,1,1,1,0,1,0,1],\r\n\t\t[0,1,0,0,1,0,1,1,1,1],\r\n\t\t[1,1,1,1,1,1,1,0,1,0],\r\n\t\t[0,0,1,0,0,1,1,1,1,1],\r\n\t]\r\n},{\r\n\t// 9x9\r\n\ttiles: [\r\n\t\t[1,1,1,1,1,1,1,1,1],\r\n\t\t[1,1,0,0,1,0,0,1,1],\r\n\t\t[1,0,0,0,1,0,0,0,1],\r\n\t\t[1,0,0,1,1,1,0,0,1],\r\n\t\t[1,1,1,1,1,1,1,1,1],\r\n\t\t[1,0,0,1,1,1,0,0,1],\r\n\t\t[1,0,0,0,1,0,0,0,1],\r\n\t\t[1,1,0,0,1,0,0,1,1],\r\n\t\t[1,1,1,1,1,1,1,1,1],\r\n\t]\r\n},{\r\n\t// 5x12\r\n\ttiles: [\r\n\t\t[1,1,1,1,1],\r\n\t\t[1,1,1,1,1],\r\n\t\t[1,1,1,0,1],\r\n\t\t[1,1,0,0,1],\r\n\t\t[1,0,0,0,1],\r\n\t\t[1,0,0,0,1],\r\n\t\t[1,0,0,0,1],\r\n\t\t[1,0,0,0,1],\r\n\t\t[1,0,0,1,1],\r\n\t\t[1,0,1,1,1],\r\n\t\t[1,1,1,1,1],\r\n\t\t[1,1,1,1,1],\r\n\t]\r\n}];\r\n\r\nexport default levels\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport './Tile.css';\r\nimport './button.css';\r\nimport './Tutorial.css';\r\nimport Game from './Game.js';\r\nimport levels from './levels.js'\r\n\r\nclass App extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlevel: 1,\r\n\t\t};\r\n\t}\r\n\t\r\n\trestart() {\r\n\t\tthis.setState({\r\n\t\t\tlevel: 1\r\n\t\t});\r\n\t}\r\n\t\r\n\tprocessLevelData() {\r\n\t\tlet currentLevelIndex = this.state.level - 1;\r\n\t\tif (currentLevelIndex >= levels.length) {\r\n\t\t\t// @TODO - no more levels, tell user they won!\r\n\t\t\tthis.restart();\r\n\t\t\tcurrentLevelIndex = 0;\r\n\t\t}\r\n\r\n\t\tlet data = levels[currentLevelIndex].tiles;\r\n\t\tlet tiles = data.reduce(function(a,b) { return a.concat(b);  })\r\n  \t \t\t\t\t.filter(function(elem) { return elem })\r\n\t\t\t\t\t.length;\r\n\r\n\t\treturn {\r\n\t\t\tlevelNum: this.state.level,\r\n\t\t\tgrid: data,\r\n\t\t\trows: data.length,\r\n\t\t\tcols: data[0].length,\r\n\t\t\ttiles: tiles,\r\n\t\t\ttime: tiles * 750,\r\n\t\t\tmonsters: this.getMonsterNum()\r\n\t\t};\r\n\t}\r\n\t\r\n\tgetMonsterNum() {\r\n\t\tif (this.state.level > 4) {\r\n\t\t\treturn Math.floor(this.state.level/5 + 5)\r\n\t\t} else if (this.state.level > 3) {\r\n\t\t\treturn this.state.level - 1;\r\n\t\t} else {\r\n\t\t\treturn this.state.level;\r\n\t\t}\r\n\t}\r\n\r\n\tincreaseLevel() {\r\n\t\tthis.setState({\r\n\t\t\tlevel: this.state.level+1\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet increaseLevel = this.increaseLevel;\r\n\t\tlet level = this.processLevelData();\r\n\t\tlet restart = this.restart;\r\n\r\n\t\treturn (\r\n\t\t\t<div className = \"body\">\r\n\t\t      <Game \r\n\t\t\t\tgameOver={false}\r\n\t\t\t\tnewLevel={true}\r\n\t\t\t\tlevel={level}\r\n\t\t\t\tincreaseLevel={increaseLevel.bind(this)}\r\n\t\t\t\trestart={restart.bind(this)}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}